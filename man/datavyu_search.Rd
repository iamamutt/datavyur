% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exported.R
\name{datavyu_search}
\alias{datavyu_search}
\title{Scans a directory for datavyur exported \code{.csv} data.}
\usage{
datavyu_search(
  columns = NULL,
  files = NULL,
  folder = getOption("datavyur.folder"),
  traverse = TRUE
)
}
\arguments{
\item{columns}{Similar to the \code{files} argument. The name of the Datavyu "column" to
import, as used in the original datavyu \code{.opf} file.}

\item{files}{The short name of the Datavyu "file" to import, as used for the original
datavyu \code{.opf} file name. For example, a Datavyu file \code{dyad1.opf}, when exported
using \code{datavyu2csv.rb}, will have in the \code{.csv} file \code{dyad1} as the value in the
column "file", and if \code{files="dyad1"} is specified for a function, only data from
\code{dyad1.opf} will be imported even though they may be separated as multiple \code{.csv}
files in a folder.}

\item{folder}{Either a scalar character pointing to a directory where contents are to
be scanned, or a vector of \code{.csv} files to import instead of all the contents found
within a folder. Defaults to the R option \code{datavyur.folder}, which is the internal
example data folder that is used throughout this package. If \code{folder} is a
character vector of multiple \code{.csv} file paths, set \code{as_list=TRUE}.}

\item{traverse}{Search subfolders of \code{folder} for datavyur \code{.csv} files.}
}
\value{
\code{data.frame} with all info from the located \code{.csv} files consisting of the
following columns:
\itemize{
\item \code{column}: the name of the specific column taken the \code{.opf} file.
\item \code{codes}: the argument/fields used to label each type of code in a column.
\item \code{file}: the file name taken from the original \code{.opf} file.
\item \code{local}: the path to the \code{.csv} file found on disk.
\item \code{classes}: the type for the given code.
\item \code{combined}: the column.field string to distinguish variable names.
\item \code{old_classes}: the estimated classes for each argument/field based on
data.table's \code{fread}.
}
}
\description{
The function will find data exported from \code{.opf} to \code{.csv} using the built-in Ruby
script.
}
\details{
Most functions in this package only work if you had previously used the
\code{datavyu2csv.rb} script to export a Datavyu file to \code{.csv}. This script can be
obtained from \code{\link[=ruby_script_folder]{ruby_script_folder()}}. Exported data is in the form of several
\code{"/column__file.csv"} files. Files will be searched based on the directory supplied
to the \code{folder} argument. Valid files will have the following columns: \code{file},
\code{column}, \code{onset}, \code{offset}, \code{ordinal}, along with custom user codes as columns.
}
\examples{
# datavyu_search(folder="path/to/my/exported/datavyu/data")

# using the package's internal data folder as an example
datavyu_search(folder=datavyur_internal_data())

# globally setting the data folder to the internal data folder
options(datavyur.folder=datavyur_internal_data())

# search by Datavyu column name using the globally set folder
datavyu_search("parenthands")
}
