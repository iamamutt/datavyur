% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exported.R
\name{import-datavyur}
\alias{import-datavyur}
\alias{import_datavyu}
\alias{import_datavyu_to_list}
\title{Imports Datavyu content into R}
\usage{
import_datavyu(..., as_list = FALSE, append_colnames = FALSE)

import_datavyu_to_list(
  folder = getOption("datavyur.folder"),
  columns = NULL,
  files = NULL,
  class_overwrite = getOption("datavyur.classlist"),
  traverse = FALSE
)
}
\arguments{
\item{...}{Additional arguments passed to \code{\link[=import_datavyu_to_list]{import_datavyu_to_list()}}.}

\item{as_list}{A logical value indicating to return a list or data frame (default).}

\item{append_colnames}{If \code{TRUE}, the column names for the returned data will be in
\code{column.field} format, e.g., \code{childhands.ordinal}, instead of having the Datavyu
column name in its own variable in the returned data set.}

\item{folder}{Either a scalar character pointing to a directory where contents are to
be scanned, or a vector of \code{.csv} files to import instead of all the contents found
within a folder. Defaults to the R option \code{datavyur.folder}, which is the internal
example data folder that is used throughout this package. If \code{folder} is a
character vector of multiple \code{.csv} file paths, set \code{as_list=TRUE}.}

\item{columns}{Similar to the \code{files} argument. The name of the Datavyu "column" to
import, as used in the original datavyu \code{.opf} file.}

\item{files}{The short name of the Datavyu "file" to import, as used for the original
datavyu \code{.opf} file name. For example, a Datavyu file \code{dyad1.opf}, when exported
using \code{datavyu2csv.rb}, will have in the \code{.csv} file \code{dyad1} as the value in the
column "file", and if \code{files="dyad1"} is specified for a function, only data from
\code{dyad1.opf} will be imported even though they may be separated as multiple \code{.csv}
files in a folder.}

\item{class_overwrite}{A \code{list} of new classes to override the guessed classes when
reading in \code{.csv} data. See \code{colClasses} from \code{\link[data.table:fread]{data.table::fread()}}. Sometimes
\code{fread} doesn't get the class of the imported column right. This can happen if you
have "codes" in your data that can be several possible types. Use \code{class_overwrite}
to override improper type settings.}

\item{traverse}{Search subfolders of \code{folder} for datavyur \code{.csv} files.}
}
\value{
See sections \code{import_datavyu} and \code{import_datavyu_to_list} below.
}
\description{
The function will find data exported from \code{.opf} to \code{.csv} using the built-in Ruby
script.
}
\details{
Most functions in this package only work if you had previously used the
\code{datavyu2csv.rb} script to export a Datavyu file to \code{.csv}. This script can be
obtained from \code{\link[=ruby_script_folder]{ruby_script_folder()}}. Exported data is in the form of several
\code{"/column__file.csv"} files. Files will be searched based on the directory supplied
to the \code{folder} argument. Valid files will have the following columns: \code{file},
\code{column}, \code{onset}, \code{offset}, \code{ordinal}, along with custom user codes as columns.
}
\section{Functions}{
\itemize{
\item \code{import_datavyu}: Import content as a \code{data.frame} or \code{list} of
\code{data.frame} objects.

\item \code{import_datavyu_to_list}: Imports Datavyu content as a nested list.
}}

\section{Note}{
 If the same column name was used across separate \code{.opf} files but has
a different set of datavyu codes then you will get an error unless \code{as_list=TRUE}.
}

\section{\code{import_datavyu}}{
 Returns one of the objects below.
\itemize{
\item a single \link{data.frame} if a single column or file was found.
\item a \link{list} of data sets if returned if different Datavyu columns are found, where
each list entry is the Datavyu column.
}
}

\section{\code{import_datavyu_to_list}}{
 Returns a \link{list} with the names:
\itemize{
\item \code{data}: a nested list with files at the top layer and column data within files.
\item \code{contents}: a \code{data.table} with the same contents from \code{\link[=datavyu_search]{datavyu_search()}}.
\item \code{order}: The order of files and columns nested within \verb{$data}.
}
}

\examples{
import_datavyu(columns="childhands")
import_datavyu(columns="childhands", append_colnames=TRUE)
import_datavyu(columns=c("childhands", "parenthands"), as_list=TRUE)

example_data_info <- datavyu_search(folder=datavyur_internal_data())
import_datavyu(files=example_data_info$file[1])

data_list <- import_datavyu_to_list()
str(data_list)
}
