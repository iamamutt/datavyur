% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exported.R
\name{r2datavyu}
\alias{r2datavyu}
\title{R data to Datavyu .csv file}
\usage{
r2datavyu(rlist, directory = ".", filename = "datavyur_export")
}
\arguments{
\item{rlist}{List of lists or \code{data.frames}. These will be the columns used in the
final Datavyu file.}

\item{directory}{Path to a directory that will store the newly created folder
"datavyur_export" containing the \code{.csv} file and the \code{.rb} script used within
Datavyu, which is needed to convert the \code{.csv} to \code{.opf}.}

\item{filename}{File name of the \code{.csv} file to be created. Any extension in the file
name will be removed.}
}
\description{
Process to transfer R data to Datavyu
}
\details{
Exports R data (as a list of lists or data frames corresponding to Datavyu columns)
to a \code{.csv} file. This can then be used by Datavyu for saving as a \code{.opf} and
importing R data into Datavyu. Each list item is a different column in the final
Datavyu file. \cr \strong{NOTE}: Datavyu cannot currently import the .csv files this
function creates, so a Ruby script is generated to convert the \code{.csv} file to \code{.opf},
which can be loaded into Datavyu.
}
\examples{
# First get example data to use
example_data <- fake_datavyu_data()

# See how the example data is structured, as a list with another list and data.frame
# Both the list and data.frame are named. If not named, one will be assigned.
str(example_data)

# Export R list to a .csv file for importing into Datavyu
r2datavyu(example_data, "~")
}
