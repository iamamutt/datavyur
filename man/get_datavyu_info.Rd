% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_contents.R
\name{get_datavyu_info}
\alias{get_datavyu_info}
\title{Scans all \code{.csv} data from a folder and checks for valid Datavyu data}
\usage{
get_datavyu_info(
  folder = NULL,
  columns = NULL,
  files = NULL,
  class_overwrite = NULL,
  traverse = FALSE
)
}
\arguments{
\item{folder}{a character string corresponding to the folder path to be scanned.
Defaults to R option \code{datavyur.folder}, which is the example data folder that is
used internally. This can also be a character vector of file paths to import
instead of all the contents from a folder. Must be either a single folder or vector
of file paths.}

\item{columns}{similar to the \code{files} argument. The name of the datavyu "column" to
import, as used in the original datavyu \code{.opf} file.}

\item{files}{the name of the datavyu "file" to import, as used in the original
datavyu \code{.opf} file. For example, a datavyu file \code{dyad1.opf} will have \code{dyad1} in
the \code{.csv} column "file", and if \code{files="dyad1"} is specified, only data from
\code{dyad1.opf} will be imported.}

\item{class_overwrite}{a \code{list} of new classes to override the guessed classes when
reading in .csv data. See \code{colClasses} from \code{\link[data.table:fread]{data.table::fread()}}. Sometimes
\code{fread} doesn't get the right class of the imported column argument. This can
happen if you have codes in your data of several possible types. Use}

\item{traverse}{search subfolders of \code{folder} for datavyu \code{.csv} files.
\code{class_overwrite} to override improper type settings.}
}
\value{
\code{data.frame} with all info from the located \code{.csv} files consisting of the
following columns:
\itemize{
\item \code{column}: the name of the specific column taken the \code{.opf} file.
\item \code{codes}: the argument/fields used to label each type of code in a column.
\item \code{file}: the file name taken from the original \code{.opf} file.
\item \code{local}: the path to the \code{.csv} file found on disk.
\item \code{classes}: the type for the given code.
\item \code{combined}: the column.field string to disinguish variable names.
\item \code{old_classes}: the estimated classes for each argument/field based on \code{fread}.
}
}
\description{
The function will read all exported \code{.opf} data in the form of several
\code{"/column__file.csv"} files. Files will be searched based on the directory supplied
to \code{folder}. Files are valid if they have the following columns: \code{file}, \code{column},
\code{onset}, \code{offset}, \code{ordinal}.
}
\details{
Most functions in this package only work if you had previously used the
\code{datavyu2csv.rb} script to export a Datavyu file to .csv. This can be obtained from
\code{\link[=ruby_script_folder]{ruby_script_folder()}}.
}
